{"version":3,"sources":["logo.svg","context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/Header.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/pages/About.js","Components/pages/NotFound.js","Components/test/Test.js","Components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","About","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.af18819e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","//provider where all the components get wrapped\nimport React,{Component}from 'react';\nimport axios from 'axios'\nimport Contact from './Components/contacts/Contact';\n\n\nconst Context=React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact=> \n                contact.id !==action.payload)\n            }\n        \n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload,\n                ...state.contacts]\n            }\n\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(\n                contact =>\n                contact.id === action.payload.id ? (contact= action.payload)\n                                             : contact\n                )\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends\n Component{\n    state={\n        contacts:[],\n\n        dispatch: action => this.setState(state=> reducer(state,action))\n        \n    };\n\n    async componentDidMount(){\n        const res= await axios\n        .get ('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({contacts: res.data});\n\n    }\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer =Context.Consumer;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Consumer} from '../../context';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\n\n\n\n\nclass Contact extends Component {\n\n    state={\n        showContactInfo: false\n    };\n\n    onDeleteClick=async (id,dispatch) =>{\n        try{\n        await axios.delete\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        dispatch({type: 'DELETE_CONTACT',payload: id});\n        }catch(e){\n            dispatch({type: 'DELETE_CONTACT',payload: id});\n\n        }\n        \n    }\n\n\n    \n    render() {\n        const{id, name, email, phone}=this.props.contact;\n\n        const {showContactInfo}=this.state;\n\n        \n\n        return (\n\n            <Consumer>\n                {value=>{\n                    const{ dispatch}=value;\n                    return(\n                        <div className=\"card card-body mb-3\">\n                        <h4>\n                            {name} \n                            <i onClick={()=> this.setState({showContactInfo: !this.state.showContactInfo})}\n                             className=\"fa fa-caret-down\"\n                             style={{cursor: 'pointer'}}\n                             />\n                             <i className=\"fa fa-trash\" \n                             style={{cursor: 'pointer', \n                             float: 'right',\n                              color:'blue'}}\n                              onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                              \n                              />\n\n                            \n\n                            <Link to={`contact/edit/${id}`}>\n                                <i \n                                className=\"fa fa-pencil\"\n                                style={{\n                                    cursor:'pointer',\n                                    float: 'right',\n                                    color: 'black',\n                                    marginRight: '1rem'\n                                }}\n                                ></i>\n                                \n                                \n                                </Link>              \n        \n                             \n                            </h4>\n                            {showContactInfo ? (<ul className=\"list-group\">\n                            <li className=\"list-group-item\">Email: {email}</li>\n                            <li className=\"list-group-item\">Phone: {phone}</li>\n                        </ul>) : null}\n                        \n                        \n                    </div>\n                    );\n                }}\n            </Consumer>\n\n            \n        );\n    }\n}\n\nContact.propTypes={\n   contact: PropTypes.object.isRequired\n   \n};\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../context'\n\nclass Contacts extends Component {\n    \n\n\n        \n    \n    render() {\n        return(\n            <Consumer>\n                {value=>{\n                    const {contacts}=value;\n                    return (\n                <React.Fragment>\n                    <h1 className=\"display-4 mb-2\">\n                       <span className=\"text-danger\"> Contact </span>List\n                    </h1>\n\n                    {contacts.map(contact => (\n                    <Contact \n                    key={contact.id}\n                   contact={contact} />\n                ))}\n                \n            </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        );\n\n\n        \n    }\n}\n\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\n\nconst Header=(props) => {\n    const {branding}=props;\n    return (\n      < nav className= \"navbar navbar-expand-sm\n      navbar-dark bg-primary mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        <i className=\"fa fa-home\"/>  Home\n                        </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/contact/add\" className=\"nav-link\">\n                    <i className=\"fa fa-plus\"/>  Add\n                        </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/about\" className=\"nav-link\">\n                    <i className=\"fa fa-question\"/>  About\n                        </Link>\n                </li>\n\n            </ul>\n        </div>\n        </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps={\n    branding: 'My App'\n};\n\n\n\nHeader.propTypes ={\n    branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n//using destructuring, so that we dont need to use props.value everwhere, \n//just use value\n const TextInputGroup=({\n     label,\n     name,\n     value,\n     placeholder, \n     type,\n     onChange,\n     error\n     \n }) =>{\n    return (\n        <div className=\"form-group\">\n                            <label htmlFor={name}>{label}</label>\n                            <input \n                            type={type}\n                            name={name}\n                            className={classnames('form-control form-control-lg',\n                            {'is-invalid':error})}\n                            placeholder={placeholder}\n                            value={value}\n                            onChange={onChange}\n\n                            />\n\n\n                            {error && <div className=\"invalid-feedback\">\n                                {error}</div>}\n                            \n                            \n                        \n             </div>\n    );\n};\n\n\nTextInputGroup.propTypes={\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    error: PropTypes.string\n    \n}\n\nTextInputGroup.defaultProps={\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state=\n    {\n        name:'',\n        email:'',\n        phone:'',\n        errors: {}\n\n    };\n\n    onSubmit =async (dispatch,e)=>{\n        e.preventDefault();\n        \n        const {name,email,phone}=this.state;\n\n\n        // Check for errors\n\n        if(name===''){\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n\n        if(email===''){\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n\n        if(phone===''){\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const newContact={\n            name,\n            email,\n            phone\n        };\n\n      const res= await axios\n       .post\n       ('https://jsonplaceholder.typicode.com/users', \n       newContact)\n       \n       \n        dispatch({type: 'ADD_CONTACT', \n        payload: res.data})\n\n\n\n        \n//clear state\n        this.setState({\n            name: '',\n            email:'',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange=(e)=>this.setState({[e.target.name]: e.target.value});\n    \n\n    render() {\n        const{name, email, phone , errors}=this.state;\n\n        return(\n            <Consumer>\n                {value=>{\n                    const {dispatch}=value;\n                    return(\n                        <div className=\"card mb-3\">\n                <div className=\"card-header\">Add Contact</div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                      \n                       <TextInputGroup \n                        label=\"Name\"\n                        name=\"name\"\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={this.onChange}\n                        error={errors.name}\n                       />\n\n\n                        <TextInputGroup \n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={this.onChange}\n                        error={errors.email}\n                       />\n\n\n                        <TextInputGroup \n                        label=\"Phone\"\n                        name=\"phone\"\n                        placeholder=\"Enter Phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                        error={errors.phone}\n                       />\n                        \n                        <input \n                        type=\"submit\" \n                        value=\"Add Contact\" \n                        className=\"btn btn-secondary btn-block mb-3\"/>\n                    </form>\n                </div>\n\n                \n                \n             </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n        \n    }\n}\n\nexport default AddContact;","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n//to access parameters use {props.match.params.id}","import React from 'react'\n\nexport default function () {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">\n                404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state={\n        title:'',\n        body:''\n    };\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(response => response.json())\n    .then(data => this.setState({\n        title: data.title,\n        body: data.body,\n        \n    })\n    );\n    }\n\n  //  componentWillMount(){\n  //      console.log('componentWillMount...');\n  //  }\n\n  //  componenDidUpdate(){\n   //     console.log('componenDidUpdate...');\n   // }\n\n   // componentWillUpdate(){\n   //     console.log('componentWillUpdate...');\n\n   // }\n\n  //  componentWillReceiveProps(nextProps,nextState){\n    //    console.log('componentWillReceiveProps...');\n   // }\n\n\n   // static getDerivedStateFromProps(nextProps, prevState){\n    \n   // }\n\n    render() {\n        const {title, body}=this.state;\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state=\n    {\n        name:'',\n        email:'',\n        phone:'',\n        errors: {}\n\n    };\n\n\n    async componentDidMount(){\n        const {id}=this.props.match.params;\n        const res = await axios.get\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact= res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n\n    }\n\n    onSubmit =async (dispatch,e)=>{\n        e.preventDefault();\n        \n        const {name,email,phone}=this.state;\n\n\n        // Check for errors\n\n        if(name===''){\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n\n        if(email===''){\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n\n        if(phone===''){\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\nconst updContact={\n    name,\n    email,\n    phone\n}\n\nconst {id}=this.props.match.params;\n\n\n//put request is to update\nconst res =await axios.put\n(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\ndispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n\n\n        \n\n\n        \n//clear state\n        this.setState({\n            name: '',\n            email:'',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange=(e)=>this.setState({[e.target.name]: e.target.value});\n    \n\n    render() {\n        const{name, email, phone , errors}=this.state;\n\n        return(\n            <Consumer>\n                {value=>{\n                    const {dispatch}=value;\n                    return(\n                        <div className=\"card mb-3\">\n                <div className=\"card-header\">Edit Contact</div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                      \n                       <TextInputGroup \n                        label=\"Name\"\n                        name=\"name\"\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={this.onChange}\n                        error={errors.name}\n                       />\n\n\n                        <TextInputGroup \n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={this.onChange}\n                        error={errors.email}\n                       />\n\n\n                        <TextInputGroup \n                        label=\"Phone\"\n                        name=\"phone\"\n                        placeholder=\"Enter Phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                        error={errors.phone}\n                       />\n                        \n                        <input \n                        type=\"submit\" \n                        value=\"Update Contact\" \n                        className=\"btn btn-secondary btn-block mb-3\"/>\n                    </form>\n                </div>\n\n                \n                \n             </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n        \n    }\n}\n\nexport default EditContact;","import React, {Component} from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport logo from './logo.svg';\nimport Contacts from './Components/contacts/Contacts';\nimport Header from './Components/layout/Header';\nimport AddContact from \"./Components/contacts/AddContact\";\nimport About from './Components/pages/About';\nimport Not_Found from './Components/pages/NotFound';\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './Components/pages/NotFound';\nimport Test from './Components/test/Test';\nimport EditContact from './Components/contacts/EditContact'\n\n\n\n\n\nclass App extends Component{\n  render(){\n \n    return(\n      <Provider>\n        <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n        <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Contacts}/>\n          <Route exact path=\"/contact/add\" component={AddContact}/>\n          <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n\n          <Route exact path=\"/about\" component={About}/>\n\n\n          <Route exact path=\"/test\" component={Test}/>\n\n          <Route component={NotFound}/>\n          \n        \n        </Switch>\n        </div>\n        \n\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}